<?php

# This file was automatically generated by the MediaWiki installer.
# If you make manual changes, please keep track in case you need to
# recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# http://www.mediawiki.org/wiki/Manual:Configuration_settings

# If you customize your file layout, set $IP to the directory that contains
# the other MediaWiki files. It will be used as a base to locate files.
if( defined( 'MW_INSTALL_PATH' ) ) {
	$IP = MW_INSTALL_PATH;
} else {
	$IP = dirname( __FILE__ );
}

# Import settings that are not safe to put into Git
# James
require_once( "$IP/SecretSettings.php" );


$path = array( $IP, "$IP/includes", "$IP/languages" );
set_include_path( implode( PATH_SEPARATOR, $path ) . PATH_SEPARATOR . get_include_path() );

require_once( "$IP/includes/DefaultSettings.php" );

if ( $wgCommandLineMode ) {
	if ( isset( $_SERVER ) && array_key_exists( 'REQUEST_METHOD', $_SERVER ) ) {
		die( "This script must be run from the command line\n" );
	}
}
## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename         = "Nottinghack Wiki";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs please see:
## http://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath       = "";
$wgScriptExtension  = ".php";

## The relative URL path to the skins directory
$wgStylePath        = "$wgScriptPath/skins";

## The relative URL path to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogo             = "$wgStylePath/common/images/nottinghack_small.png";

## UPO means: this is also a user preference option

$wgEnableEmail      = true;
$wgEnableUserEmail  = true; # UPO

$wgEmergencyContact = "webmaster@nottinghack.org.uk";
$wgPasswordSender = "webmaster@nottinghack.org.uk";

$wgEnotifUserTalk = true; # UPO
$wgEnotifWatchlist = true; # UPO
$wgEmailAuthentication = true;

## Database settings
## Server settings are in SecretSettings

# MySQL specific settings
$wgDBprefix         = "mw_";

# MySQL table options to use during installation or update
$wgDBTableOptions   = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Experimental charset support for MySQL 4.1/5.0.
$wgDBmysql5 = true;

## Shared memory settings
$wgMainCacheType = CACHE_NONE;
$wgMemCachedServers = array();

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads       = true;
 $wgUseImageMagick = false;
 $wgImageMagickConvertCommand = "/usr/bin/convert";

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "en_US.utf8";

## If you want to use image uploads under safe mode,
## create the directories images/archive, images/thumb and
## images/temp, and make them all writable. Then uncomment
## this, if it's not already uncommented:
# $wgHashedUploadDirectory = false;

## If you have the appropriate support software installed
## you can enable inline LaTeX equations:
$wgUseTeX           = true;

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publically accessible from the web.
#$wgCacheDirectory = "$IP/cache";

$wgLocalInterwiki   = strtolower( $wgSitename );

$wgLanguageCode = "en";

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'vector', 'monobook':
$wgDefaultSkin = 'vector';
# To remove various skins from the User Preferences choices
$wgSkipSkins = array("modern", "chick", "cologneblue", "myskin", "nostalgia", "simple", "standard");


## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
# $wgEnableCreativeCommonsRdf = true;
$wgRightsPage = "Main:Copyright"; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "http://creativecommons.org/licenses/by-sa/3.0/";
$wgRightsText = "Creative Commons Attribution-ShareAlike 3.0 License";
$wgRightsIcon = "http://i.creativecommons.org/l/by-sa/3.0/88x31.png";
# $wgRightsCode = ""; # Not yet used

$wgDiff3 = "/usr/bin/diff3";

# When you make changes to this configuration file, this will make
# sure that cached pages are cleared.
$wgCacheEpoch = max( $wgCacheEpoch, gmdate( 'YmdHis', @filemtime( __FILE__ ) ) );

# Custom namespaces
# IDs should be 510-599 to avoid conflicts with extensions
# Project, Group and Library added 25/08/2013 by James Hayward
define("NH_NS_PROJECT", 510);
define("NH_NS_PROJECT_TALK", 511);
define("NH_NS_GROUP", 512);
define("NH_NS_GROUP_TALK", 513);
define("NH_NS_LIBRARY", 514);
define("NH_NS_LIBRARY_TALK", 515);
 
$wgExtraNamespaces[NH_NS_PROJECT] = "Project";
$wgExtraNamespaces[NH_NS_PROJECT_TALK] = "Project_talk";
$wgExtraNamespaces[NH_NS_GROUP] = "Group";
$wgExtraNamespaces[NH_NS_GROUP_TALK] = "Group_talk";
$wgExtraNamespaces[NH_NS_LIBRARY] = "Library";
$wgExtraNamespaces[NH_NS_LIBRARY_TALK] = "Library_talk";

# Making sure the search works properly!
# Added 09/01/2014 by James Hayward
$wgNamespacesToBeSearchedDefault = array(
	NS_MAIN				=>	true,
	NS_TALK				=>	false,
	NS_USER				=>	true,
	NS_USER_TALK		=>	false,
	NS_PROJECT			=>	false,
	NS_PROJECT_TALK		=>	false,
	NS_FILE				=>	false,
	NS_FILE_TALK		=>	false,
	NS_MEDIAWIKI		=>	false,
	NS_MEDIAWIKI_TALK	=>	false,
	NS_TEMPLATE			=>	false,
	NS_TEMPLATE_TALK	=>	false,
	NS_HELP				=>	false,
	NS_HELP_TALK		=>	false,
	NS_CATEGORY			=>	false,
	NS_CATEGORY_TALK	=>	false,
	NH_NS_PROJECT		=>	true,
	NH_NS_PROJECT_TALK	=>	false,
	NH_NS_GROUP			=>	true,
	NH_NS_GROUP_TALK	=>	false,
	NH_NS_LIBRARY		=>	true,
	NH_NS_LIBRARY_TALK	=>	false
);

# Setting up subpages
# Added 16/01/2014 by James Hayward
$wgNamespacesWithSubpages = array(
	NS_MAIN				=>	true,
	NS_TALK				=>	false,
	NS_USER				=>	true,
	NS_USER_TALK		=>	false,
	NS_PROJECT			=>	false,
	NS_PROJECT_TALK		=>	false,
	NS_FILE				=>	false,
	NS_FILE_TALK		=>	false,
	NS_MEDIAWIKI		=>	false,
	NS_MEDIAWIKI_TALK	=>	false,
	NS_TEMPLATE			=>	false,
	NS_TEMPLATE_TALK	=>	false,
	NS_HELP				=>	false,
	NS_HELP_TALK		=>	false,
	NS_CATEGORY			=>	false,
	NS_CATEGORY_TALK	=>	false,
	NH_NS_PROJECT		=>	true,
	NH_NS_PROJECT_TALK	=>	false,
	NH_NS_GROUP			=>	true,
	NH_NS_GROUP_TALK	=>	false,
	NH_NS_LIBRARY		=>	true,
	NH_NS_LIBRARY_TALK	=>	false
	);


#added by LWK

#$wgScriptPath = "/w";         # Path to the actual files. This should already be there
$wgArticlePath = "/wiki/$1";  # Virtual path. This directory MUST be different from the one used in $wgScriptPath
$wgUsePathInfo = true;        # Enable use of pretty URLs
$wgFavicon = "http://www.nottinghack.org.uk/favicon.ico";
$wgAppleTouchIcon = "http://www.nottinghack.org.uk/hackspaceNottmsm128.png";

# This line stops all unregistered users from editing
$wgGroupPermissions['*']['edit'] = false;
# This line disables self-registration
# Sysops or logged-in users can create accounts for others through Special:Userlogin
$wgGroupPermissions['*']['createaccount'] = false;

$wgLocaltimezone = 'EST';

$wgLocalTZoffset = date("Z") / 60;

# File Extensions allowed for upload
$wgFileExtensions = array('png', 'gif', 'pde', 'jpg', 'jpeg', 'pdf', 'sh3d', 'psd');

# need to allow zips, as sh3d is a zip!
$wgMimeTypeBlacklist = array(
							 # HTML may contain cookie-stealing JavaScript and web bugs
							 'text/html', 'text/javascript', 'text/x-javascript',  'application/x-shellscript',
							 # PHP scripts may execute arbitrary code on the server
							 'application/x-php', 'text/x-php',
							 # Other types that may be interpreted by some servers
							 'text/x-python', 'text/x-perl', 'text/x-bash', 'text/x-sh', 'text/x-csh',
							 # Client-side hazards on Internet Explorer
							 'text/scriptlet', 'application/x-msdownload',
							 # Windows metafile, client-side vulnerability on some systems
							 'application/x-msmetafile',
							 # A ZIP file may be a valid Java archive containing an applet which exploits the
							 # same-origin policy to steal cookies
							 #'application/zip',
							 # MS Office OpenXML and other Open Package Conventions files are zip files
							 # and thus blacklisted just as other zip files
							 'application/x-opc+zip',
							 );


# Adding the ReCaptcha service for user account creation
# James Hayward 06/02/2011
//require_once( "$IP/extensions/ConfirmEdit/ConfirmEdit.php" );
//require_once( "$IP/extensions/ConfirmEdit/ReCaptcha.php"); 
//$wgCaptchaClass = 'ReCaptcha';


# We only want the captcha to appear on user creation
$wgCaptchaTriggers['edit']          = false; 
$wgCaptchaTriggers['create']        = false; 
$wgCaptchaTriggers['addurl']        = false; 
$wgCaptchaTriggers['createaccount'] = true;
$wgCaptchaTriggers['badlogin']      = false;

# Adding the ParserFunctions extension
# James Hayward 26/02/2011
require_once( "$IP/extensions/ParserFunctions/ParserFunctions.php" );
$wgPFEnableStringFunctions = true;

# Adding SyntaxHighlight_GeSHi extension
# James Hayward 26/02/2011
require_once("$IP/extensions/SyntaxHighlight_GeSHi/SyntaxHighlight_GeSHi.php");

# Adding Poem extension
# James Hayward 26/02/2011
require_once($IP.'/extensions/Poem/Poem.php');

# SVG
# LWK 27/02/2011
$wgFileExtensions[] = 'svg';
#If issues with JavaScript fasle positive uncomment
# $wgAllowTitlesInSVG = true;
$wgSVGConverter = 'ImageMagick';

# Adding Widgets extension
# LWK 27/02/2011
require_once("$IP/extensions/Widgets/Widgets.php");
$wgGroupPermissions['sysop']['editwidgets'] = true;


# Adding SpecialInterwiki extension
# http://www.mediawiki.org/wiki/Extension:SpecialInterwiki
# LWK 278/02/2011
require_once("$IP/extensions/Interwiki/Interwiki.php");
$wgGroupPermissions['*']['interwiki'] = false;
$wgGroupPermissions['sysop']['interwiki'] = true;
$wgGroupPermissions['interwiki']['interwiki'] = true;

# Adding ReplacText Extension
# http://www.mediawiki.org/wiki/Extension:Replace_Text
# LWK 21/05/2011
require_once( "$IP/extensions/ReplaceText/ReplaceText.php" );
$wgGroupPermissions['bureaucrat']['replacetext'] = true;

# LWK 10/12/2011
# Enable subpages in the main namespace
# Moved this up to the custom namespace section above
# 16/01/2014, James Hayward
#$wgNamespacesWithSubpages[NS_MAIN] = true;

# Allowing images from Google
# James Hayward 17/05/2012
$wgAllowExternalImages = false;
$wgAllowExternalImagesFrom = array( 'http://chart.apis.google.com/' );

# Adding in the WikiEditor Extension
# Bundled in 1.19 an later
# James Hayward 17/11/12
require_once( "$IP/extensions/WikiEditor/WikiEditor.php" );
# Enables use of WikiEditor by default but still allow users to disable it in preferences
$wgDefaultUserOptions['usebetatoolbar'] = 1;
$wgDefaultUserOptions['usebetatoolbar-cgd'] = 1;
# Displays the Preview and Changes tabs
$wgDefaultUserOptions['wikieditor-preview'] = 1;
# Displays the Publish and Cancel buttons on the top right side
$wgDefaultUserOptions['wikieditor-publish'] = 1;
# Displays a navigation column (summary) on the right side
$wgDefaultUserOptions['usenavigabletoc'] = 1;

# Adding Vector extension
# Bundled in 1.19 and later
# James Hayward 17/11/12
require_once( "$IP/extensions/Vector/Vector.php" );
$wgDefaultUserOptions['useeditwarning'] = 1;
$wgVectorFeatures['editwarning']['user'] = true;
$wgVectorFeatures['collapsibletabs']['user'] = true;
$wgVectorFeatures['collapsiblenav']['user'] = true;
$wgVectorUseSimpleSearch = true;

# Adding Renameuser extenstion
# Bundled in 1.19 and later
# James Hayward 17/11/12
require_once("$IP/extensions/Renameuser/Renameuser.php");

# Gadget extension
# Bundled in 1.19 and later
# Not using
# James Hayward 17/11/12
# require_once( "$IP/extensions/Gadgets/Gadgets.php" );


# Nuke extension
# Bundled in 1.19 and later
# Not using
# James Hayward 17/11/12
# require_once("$IP/extensions/Nuke/Nuke.php");

# Adding Category Sort Headers extension
# James Hayward 17/11/12
require_once( "$IP/extensions/CategorySortHeaders/CategorySortHeaders.php" );

# Adding MagicNumberedHeadings extension
# James Hayward 19/11/2012
require_once($IP.'/extensions/MagicNumberedHeadings/MagicNumberedHeadings.php');

# Adding CSS extension
# James Hayward 10/12/2012
require_once("$IP/extensions/CSS/CSS.php");

# Adding HMS auth extension
# Daniel 23/03/2013
require_once('extensions/HMSAuth/Auth.php');
$wgAuth = new NHAuth();

